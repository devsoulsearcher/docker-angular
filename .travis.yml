# This is the file to instruct Travis CI what to do with the project
# 1. Request a copy of docker
# 2. Build the docker image
# 3. Run the test
# 4. Deploy the code
# set the language
# language: node_js
# node_js:
#   - "11.0"
# we need super user level permission
# sudo: required -- removed deprecated
# tell travis ci that we need a copy of docker
services:
    - docker
# series of steps that need to run before the test is run 
before_install:
    - docker build -t devsoulsearcher/docker -f docker/Dockerfile.dev .
# series of commands that are need to run the test
# -- --coverage : this will automatically close the test execution once done
script:
    - docker run devsoulsearcher/docker npm run test
# configuration for AWS deployment
deploy:
    # AWS provider
    provider: elasticbeanstalk
    # Can be find from the URL from the host Docker-env.eba-pebp65fn.us-east-2.elasticbeanstalk.com 
    region: "us-east-2"
    app: "docker"
    env: "Docker-env"
    # S3 bucket, a cloud storage in AWS
    # get this info by searching S3 from AWS services directory
    bucket_name: "elasticbeanstalk-us-east-2-072479754912"
    # a folder inside the S3 bucket above
    bucket_path: "docker"
    cleanup: false
    edge: true
    # to prevent Travis CI from deleting build artifacts.
    # skip_cleanup: true -- removed deprecated
    # branches:
    #     only:
    #     - master
    # make a deployment only when changes has been made on the master branch
    on:
        branch: master
    # The environment variables below shall be added in Travis CI
    # the keys value shall be generated by creating a user in AWS "IAm" service.
    # Once the user is created, the two keys will be generated.
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY